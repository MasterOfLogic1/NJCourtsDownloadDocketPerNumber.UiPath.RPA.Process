<Activity mc:Ignorable="sap sap2010" x:Class="DownloadCaseActionsFromNjCourts" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="ExternalDictionary" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="docTransactionIds" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="BrowserCache" Type="InOutArgument(ui:Browser)" />
    <x:Property Name="docketNumber" Type="InArgument(x:String)" />
    <x:Property Name="dumpsSubFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="downloadLogFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>962.4,4570.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DownloadCaseActionsFromNjCourts_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Try downlaoding file here:&#xA;Scrape document Id&#xA;Navigate to download page if file not downloaded , the download " sap:VirtualizedContainerService.HintSize="992.4000000000001,4957.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" Name="dowloadStateHanger" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="awaitDownloadList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="574.4,149.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[dowloadStateHanger]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[New Dictionary(Of String,Boolean)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <TryCatch sap2010:Annotation.AnnotationText="Try downlaoding file here:&#xA;Scrape document Id&#xA;Navigate to download page if file not downloaded , the download " DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="574.4,4724.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Try downlaoding file here:&#xA;Scrape document Id&#xA;Navigate to download page if file not downloaded , the download " DisplayName="DownloadCaseActionsFromNjCourts" sap:VirtualizedContainerService.HintSize="572.8,4354.4" sap2010:WorkflowViewState.IdRef="Sequence_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If sap2010:Annotation.AnnotationText="Perform Action On Transaction Id&#xA;-Gets click index for transaction id" Condition="[docTransactionIds IsNot Nothing AndAlso docTransactionIds.Keys.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="539.2,2764" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="Perform Action On Transaction Id&#xA;-Gets click index for transaction id" DisplayName="Then" sap:VirtualizedContainerService.HintSize="537.6,2492" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="docKeys" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="504,113.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[docKeys]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[docTransactionIds.Keys.ToArray()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Perform Action On Transaction Id&#xA;-Gets click index for transaction id" DisplayName="For Each docTransactionId" sap:VirtualizedContainerService.HintSize="504,2274.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[docKeys]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="docTransactionId" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:Annotation.AnnotationText="Perform Action On Transaction Id&#xA;-Gets click index for transaction id&#xA;" DisplayName="Perform Action On Transaction Id" sap:VirtualizedContainerService.HintSize="502.4,2108.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="nameOfFileToDownload" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Comment sap:VirtualizedContainerService.HintSize="468.8,164.8" sap2010:WorkflowViewState.IdRef="Comment_2" Text="//Creates sub folder in dumps&#xA;&#xA;//check for the file in dumps&#xA;&#xA;//if file not existing then download file" />
                        <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[nameOfFileToDownload]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[docTransactionIds(docTransactionId).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:Annotation.AnnotationText="Download file here if file does not exist" Condition="[Not File.Exists(Path.Combine(dumpsSubFolderPath,nameOfFileToDownload))]" sap:VirtualizedContainerService.HintSize="468.8,1710.4" sap2010:WorkflowViewState.IdRef="If_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap2010:Annotation.AnnotationText="Download file here if file does not exist" DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,1384.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="fillingLinkFound" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[dowloadStateHanger(nameOfFileToDownload)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NavigateToAttachedDocument workflow" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\NJCourtsWeb\NavigateToAttachedDocument.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="docTransactionId">[docTransactionId]</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_WaitTime">2000</InArgument>
                                  <InOutArgument x:TypeArguments="ui:Browser" x:Key="njOfficialCache">[BrowserCache]</InOutArgument>
                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="fillingLinkFound">[fillingLinkFound]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If sap2010:Annotation.AnnotationText="Get downloadable page on when filling link was found" Condition="[fillingLinkFound]" sap:VirtualizedContainerService.HintSize="433.6,1004" sap2010:WorkflowViewState.IdRef="If_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get downloadable page on when filling link was found" DisplayName="Invoke GetDownloadablePage workflow" sap:VirtualizedContainerService.HintSize="416,188" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\NJCourtsWeb\GetDownloadablePage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_WaitTime">2000</InArgument>
                                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="dowloadStateHanger">[dowloadStateHanger]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="dumpsSubFolderPath">[dumpsSubFolderPath]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="nameOfFileToDownload">[nameOfFileToDownload]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="docketNumber">[docketNumber]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:Annotation.AnnotationText="remove from download state hanger and docIds" DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,632.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="Remove doc id from dictionary: this is an alternative to avoild using invoke code, we simply call the remove method found in the dictionary class and pass the parameter which is the key" DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="382.4,275.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Remove">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[dowloadStateHanger]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="x:String">[nameOfFileToDownload]</InArgument>
                                    </InvokeMethod>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="Remove doc id from dictionary: this is an alternative to avoild using invoke code, we simply call the remove method found in the dictionary class and pass the parameter which is the key" DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="382.4,266.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Remove">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[docTransactionIds]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="x:String">[nameOfFileToDownload]</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="467.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[docTransactionId+&quot; already downloaded&quot;]" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="537.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <If sap2010:Annotation.AnnotationText="Checks that file which download button was clicked is downloaded" Condition="[dowloadStateHanger IsNot Nothing AndAlso dowloadStateHanger.Where(Function(x) x.Value = True).Count &gt; 0]" sap:VirtualizedContainerService.HintSize="539.2,631.2" sap2010:WorkflowViewState.IdRef="If_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="Checks that file which download button was clicked is downloaded" DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,372" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(x:String)">[awaitDownloadList]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(x:String)">[dowloadStateHanger.Where(Function(x) x.Value = True).ToList().ConvertAll(Function(x) x.Key)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CheckForDownloadCompletion workflow" sap:VirtualizedContainerService.HintSize="433.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\CheckForDownloadCompletion.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="ExternalDictionary">[ExternalDictionary]</InArgument>
                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="awaitDownloadList">[awaitDownloadList]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="dumpsSubFolderPath">[dumpsSubFolderPath]</InArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="dowloadStateHanger">[dowloadStateHanger]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <If sap2010:Annotation.AnnotationText="Throw error if one or more files i not downloaded" Condition="[dowloadStateHanger IsNot Nothing AndAlso dowloadStateHanger.Keys.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="539.2,839.2" sap2010:WorkflowViewState.IdRef="If_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Throw Exception="[New SystemException(&quot;One or more files not download for &quot;+docketNumber+&quot; the files are [&quot;+String.Join(&quot;,&quot;,dowloadStateHanger.Keys.ToArray())+&quot;]&quot;)]" sap:VirtualizedContainerService.HintSize="417.6,90.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
            </If.Then>
            <If.Else>
              <TryCatch sap2010:Annotation.AnnotationText="update download Log in dumps folder" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="417.6,543.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:WriteTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Creates a log of all files downloaded and stores the in a folder" DisplayName="Write Text File" FileName="[downloadLogFilePath]" sap:VirtualizedContainerService.HintSize="416,178.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[String.Join(Environment.NewLine,docTransactionIds.Values.ToArray())]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteTextFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="854.6666666666666,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="close tab and throw another exception" DisplayName="Body" sap:VirtualizedContainerService.HintSize="572.8,56" sap2010:WorkflowViewState.IdRef="Sequence_25">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="Checks that file which download button was clicked is downloaded" Condition="[dowloadStateHanger IsNot Nothing AndAlso dowloadStateHanger.Where(Function(x) x.Value).Count &gt; 0]" sap:VirtualizedContainerService.HintSize="382.4,116.8" sap2010:WorkflowViewState.IdRef="If_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap2010:Annotation.AnnotationText="Checks that file which download button was clicked is downloaded" sap:VirtualizedContainerService.HintSize="383.333333333333,353.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="341.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">[awaitDownloadList]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">[dowloadStateHanger.Where(Function(x) x.Value).ToList().ConvertAll(Function(x) x.Key)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CheckForDownloadCompletion workflow" sap:VirtualizedContainerService.HintSize="341.333333333333,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\CheckForDownloadCompletion.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="ExternalDictionary">[ExternalDictionary]</InArgument>
                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="awaitDownloadList">[awaitDownloadList]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="dumpsSubFolderPath">[dumpsSubFolderPath]</InArgument>
                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="dowloadStateHanger">[dowloadStateHanger]</InOutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="closes the download page" DisplayName="Invoke CloseDocumentDownloadPageOnNjCourts workflow" sap:VirtualizedContainerService.HintSize="382.4,207.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\NJCourtsWeb\CloseDocumentDownloadPageOnNjCourts.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <Throw sap2010:Annotation.AnnotationText="Throw exception here" Exception="[exception]" sap:VirtualizedContainerService.HintSize="382.4,144.8" sap2010:WorkflowViewState.IdRef="Throw_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Throw>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="572.8,89.6" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>