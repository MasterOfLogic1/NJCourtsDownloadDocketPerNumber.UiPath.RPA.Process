<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.shouldUseAutoLogin="True" this:Main.countDocket="4" this:Main.startDocketNumber="1" this:Main.in_UsrWorkYear="2025" this:Main.in_DocketType="F" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="shouldUseAutoLogin" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator folder name where the queue is created to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueFolder" Type="InArgument(x:String)" />
    <x:Property Name="UnsetResumeLog" Type="InArgument(x:Boolean)" />
    <x:Property Name="countDocket" Type="InArgument(x:Int32)" />
    <x:Property Name="startDocketNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_UsrWorkYear" Type="InArgument(x:Int32)" />
    <x:Property Name="in_DocketType" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>817,1071</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Linq.Expressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="910.4000000000001,644" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">50,32.66666666666666</av:Point>
        <x:Double x:Key="StateContainerWidth">665.3333333333334</x:Double>
        <x:Double x:Key="StateContainerHeight">992</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">99.6,57.466666666666654 129.6,57.466666666666654 129.6,33.7 274.5,33.7</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Process stops here,&#xA;Updates Process on RPA data base, Kill Excels and Close all applications Used" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="149.6,186.4" sap2010:WorkflowViewState.IdRef="State_6" IsFinal="True">
      <State.Entry>
        <TryCatch sap:VirtualizedContainerService.HintSize="488,581" sap2010:WorkflowViewState.IdRef="TryCatch_17">
          <TryCatch.Try>
            <Sequence sap2010:Annotation.AnnotationText="Process stops here,&#xA;Updates Process on RPA data base, Kill Excels and Close all applications Used" DisplayName="End of process activities" sap:VirtualizedContainerService.HintSize="416,512" sap2010:WorkflowViewState.IdRef="Sequence_42">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[BusinessException IsNot Nothing]" sap:VirtualizedContainerService.HintSize="374,84" sap2010:WorkflowViewState.IdRef="If_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="516,451" sap2010:WorkflowViewState.IdRef="Sequence_63">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="454,363" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="416,113" sap2010:WorkflowViewState.IdRef="Sequence_58">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="resumeLogPath" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[File.Exists(StandardScreenShotPath)]" sap:VirtualizedContainerService.HintSize="374,48" sap2010:WorkflowViewState.IdRef="If_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,312" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments">[{StandardScreenShotPath}]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",BusinessException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,312" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments" />
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",BusinessException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap2010:WorkflowViewState.IdRef="Sequence_64" />
                </If.Else>
              </If>
              <If Condition="[SystemException IsNot Nothing]" sap:VirtualizedContainerService.HintSize="374,84" sap2010:WorkflowViewState.IdRef="If_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="568,894" sap2010:WorkflowViewState.IdRef="Sequence_65">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="resumeLogPath" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[File.Exists(StandardScreenShotPath)]" sap:VirtualizedContainerService.HintSize="526,806" sap2010:WorkflowViewState.IdRef="If_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,312" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments">[{StandardScreenShotPath}]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",SystemException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,312" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments" />
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",SystemException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="572,21" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_71">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="374,84" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,201" sap2010:WorkflowViewState.IdRef="Sequence_49">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReportErrorsToSupport.xaml" sap:VirtualizedContainerService.HintSize="358,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Project\ReportErrorsToSupport.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="errorLogFilePath">[exceptionFilePath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="374,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,22" sap2010:WorkflowViewState.IdRef="Catch`1_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <If Condition="[SystemException IsNot Nothing AndAlso (Config Is Nothing OrElse Convert.ToBoolean(Config(&quot;ShouldMarkJobAsFaulted&quot;)))]" DisplayName="If SystemException IsNot Nothing" sap:VirtualizedContainerService.HintSize="450,353" sap2010:WorkflowViewState.IdRef="If_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <TerminateWorkflow DisplayName="Terminate Main Workflow" Exception="[SystemException]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[SystemException.Message]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_72">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </TryCatch.Finally>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">73,218.5</av:Point>
          <av:Size x:Key="ShapeSize">149.6,186.4</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">138</x:Double>
          <x:Double x:Key="StateContainerHeight">29</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </State>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Connects to the internet, open the browser , navigates to njcourts, does a bunch of things to ensure site is stable and downloads files going by leads name" DisplayName="Process" sap:VirtualizedContainerService.HintSize="187.2,232" sap2010:WorkflowViewState.IdRef="State_5">
      <State.Entry>
        <TryCatch DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="513.6,2269.6" sap2010:WorkflowViewState.IdRef="TryCatch_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence sap2010:Annotation.AnnotationText="Connects to the internet, open the browser , navigates to the county url , scrape all sheriff numbers as well as details , get values avm and nrrpr , update db " DisplayName="Process County" sap:VirtualizedContainerService.HintSize="512,691.2" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Connects to the internet, open the browser , navigates to the county url , scrape all sheriff numbers as well as details , get values avm and nrrpr , update db " DisplayName="Process.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,236" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\Process.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ExternalDictionary">[ExternalDictionary]</InArgument>
                  <InOutArgument x:TypeArguments="ui:Browser" x:Key="browserCache">[browserCache]</InOutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="zipcodeToCountyNameLibrary">[zipcodeToCountyNameLibrary]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="exceptionFilePath">[exceptionFilePath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="WorkYear">[TransactionItem.Split("-"c)(2)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="docketNumber">[TransactionItem.Split("-"c)(1)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="docketType">[TransactionItem.Split("-"c)(0)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,171.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Int32">[NumberOfDownloads]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Int32">[NumberOfDownloads + 1]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[PreviouslyTreatedDocketNumber]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[TransactionItem]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="442,21" sap2010:WorkflowViewState.IdRef="Catch`1_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap2010:Annotation.AnnotationText="Logs business error in the exceptions log" DisplayName="LOG BUSINESS ERROR" sap:VirtualizedContainerService.HintSize="512,402.4" sap2010:WorkflowViewState.IdRef="Sequence_39">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set transaction status to Rule Exception" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddResponse" sap:VirtualizedContainerService.HintSize="478.4,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\AddResponse.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Response">["["+TransactionItem+"] Error : "+exception.Message+" at "+ exception.Source]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="exceptionFilePath">[exceptionFilePath]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </Catch>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="442,21" sap2010:WorkflowViewState.IdRef="Catch`1_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap2010:Annotation.AnnotationText="Logs System error in exceptions folder if any" DisplayName="LOGS SYSTEM ERROR" sap:VirtualizedContainerService.HintSize="512,402.4" sap2010:WorkflowViewState.IdRef="Sequence_40">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddResponse" sap:VirtualizedContainerService.HintSize="478.4,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\AddResponse.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Response">["["+TransactionItem+"] Error : "+exception.Message+" at "+ exception.Source]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="exceptionFilePath">[exceptionFilePath]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap:VirtualizedContainerService.HintSize="512,570.4" sap2010:WorkflowViewState.IdRef="TryCatch_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionStatus" sap:VirtualizedContainerService.HintSize="416,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[Nothing]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="416,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
              <TryCatch.Finally>
                <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_74">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </TryCatch.Finally>
            </TryCatch>
          </TryCatch.Finally>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">245.5,621.5</av:Point>
          <av:Size x:Key="ShapeSize">187.2,232</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">175</x:Double>
          <x:Double x:Key="StateContainerHeight">58.000000000000085</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="516,507" sap2010:WorkflowViewState.IdRef="Transition_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">413.98,853.5 413.98,870.36 529.8,870.36 529.8,390.36 499.8,390.36</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">71</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">32</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[SystemException Is Nothing AndAlso BusinessException Is Nothing]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Get next transactionItem  from the aarray of counties : Each county would be treated as a transaction Item and sent for processing in a repetitive manner" DisplayName="Get Next TransactionItem" sap:VirtualizedContainerService.HintSize="200.8,220.8" sap2010:WorkflowViewState.IdRef="State_7">
              <State.Entry>
                <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="549,1028" sap2010:WorkflowViewState.IdRef="Sequence_37">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="507,25" sap2010:WorkflowViewState.IdRef="ShouldStop_3" Result="[ShouldStop]" />
                  <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="507,875" sap2010:WorkflowViewState.IdRef="If_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="473,352" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <TryCatch DisplayName="GetCountyData" sap:VirtualizedContainerService.HintSize="438,341" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetTransactionData" sap:VirtualizedContainerService.HintSize="363,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="ExternalDictionary">[ExternalDictionary]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="TransactionItem">[TransactionItem]</OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="TransactionID">[TransactionID]</OutArgument>
                              <InOutArgument x:TypeArguments="s:String[]" x:Key="ArrayOfTransactionItem">[ArrayOfDocketNumbers]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="TransactionNumber">[TransactionNumber]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="PreviouslyTreatedDocketNumber">[PreviouslyTreatedDocketNumber]</InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="NumberOfDownloads">[NumberOfDownloads]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Log exception message and End process" sap:VirtualizedContainerService.HintSize="476,309" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                <Assign DisplayName="End Process" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_31">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Else>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">299,291</av:Point>
                  <av:Size x:Key="ShapeSize">200.8,220.8</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">180.00000000000023</x:Double>
                  <x:Double x:Key="StateContainerHeight">63.33333333333317</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="481.33333333333326,897.3333333333334" sap2010:WorkflowViewState.IdRef="Transition_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">409.44,511.8 409.44,541.8 339.1,541.8 339.1,621.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,183.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_41">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot; Intiatilizing Inputs and Resources for  transaction Number &quot;+TransactionNumber.ToString]" />
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
                </Transition>
                <Transition DisplayName="No Data" sap:VirtualizedContainerService.HintSize="450,535" sap2010:WorkflowViewState.IdRef="Transition_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">409.44,511.8 409.44,541.8 193.32,541.8 193.32,404.9</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">63</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                  </Transition.Action>
                  <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="Rule Exception" sap:VirtualizedContainerService.HintSize="450,507" sap2010:WorkflowViewState.IdRef="Transition_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">367.18,853.5 367.18,883.5 118.12,883.5 118.12,404.9</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">51</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">23</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Condition>[BusinessException IsNot Nothing]</Transition.Condition>
        </Transition>
        <Transition DisplayName="System Error" sap:VirtualizedContainerService.HintSize="583,857" sap2010:WorkflowViewState.IdRef="Transition_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">385.9,853.5 385.9,873.3 566.9,873.3 566.9,93.3 536.9,93.3</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read Config,Load External dictionaries, Inititialize all applications, files and process elements as well as files to download" DisplayName="Init" sap:VirtualizedContainerService.HintSize="262.4,169.6" sap2010:WorkflowViewState.IdRef="State_8">
              <State.Entry>
                <TryCatch DisplayName="Catch intialization exceptions" sap:VirtualizedContainerService.HintSize="513.6,2395.2" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Init State" sap:VirtualizedContainerService.HintSize="512,1380.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign sap2010:Annotation.AnnotationText="Set business and System exceptio to Nothing" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,243.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillExcelUpdated workflow" sap:VirtualizedContainerService.HintSize="478.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Reusable_Components\KillExcelUpdated.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap:VirtualizedContainerService.HintSize="478.4,56.8" sap2010:WorkflowViewState.IdRef="If_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="First Run" sap:VirtualizedContainerService.HintSize="496,1250" sap2010:WorkflowViewState.IdRef="Sequence_31">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Initialize config, loads the config.xlsx file present in CompilationReportDispactherX\Data" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <Assign sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[Config("ArchivesFolderPath")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Config("ArchivesFolderPath").ToString().Replace("UserName",System.Environment.UserName)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetupEnvironment.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="Project\SetupEnvironment.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="config">[Config]</InArgument>
                                <InArgument x:TypeArguments="s:String[]" x:Key="ArrayOfFolders">[{config("RPARootFolder").ToString(),config("ProcessRootFolder").ToString(),config("DumpsFolderPath").ToString(),config("TempsFolderPath").ToString(),config("ExceptionsFolderPath").ToString(),config("ErrorScreenshotsFolderPath").ToString(),config("LogFolderPath").ToString(),config("ProcessingFolderPath").ToString(),config("ArchivesFolderPath").ToString(),config("MasterFolderPath").ToString()}]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Gets Process Name for logging purpose only" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="434,203" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ProcessName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[Config("ProcessName").ToString]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[exceptionFilePath]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.Combine(Config("ExceptionsFolderPath").ToString,"Exception_Log.txt")]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Initialize External Config, loads the ExternalDictionary.xlsx file present in WorkDirectory\External_Config_Files" DisplayName="Invoke Load_External_Dictionary workflow" sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework\Load_External_Dictionary.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_ExternalDictionary">[ExternalDictionary]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillExcelUpdated workflow" sap:VirtualizedContainerService.HintSize="434,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Reusable_Components\KillExcelUpdated.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="434,144" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
                              <ui:AddLogFields.Fields>
                                <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                              </ui:AddLogFields.Fields>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddLogFields>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_48">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[StandardScreenShotPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(config("ErrorScreenshotsFolderPath").ToString(),"WhyIStopped_Error.png")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[ConsecutiveSystemExceptions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If sap2010:Annotation.AnnotationText="If MaxConsecutiveSystemExceptions number was reached, throw Exception at initialization and go to End Process state, thus finalizing the execution. &#xA;If MaxConsecutiveSystemExceptions is 0, then any number of consecutive System Exceptions is allowed." Condition="[Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))&gt;0 AndAlso ConsecutiveSystemExceptions&gt;=Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))]" DisplayName="If maxConsecutiveSystemExceptions exceeded" sap:VirtualizedContainerService.HintSize="478.4,260.8" sap2010:WorkflowViewState.IdRef="If_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Throw DisplayName="Throw Consecutive Exceptions exceeded" Exception="[new Exception(Config(&quot;ExceptionMessage_ConsecutiveErrors&quot;).ToString + &quot; Consecutive retry number: &quot; + (ConsecutiveSystemExceptions+1).ToString)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="415,232" sap2010:WorkflowViewState.IdRef="Sequence_51">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Delete the standard screenshot error" DisplayName="Reusable_Components\DeleteFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="373,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="Reusable_Components\DeleteFile.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[StandardScreenShotPath]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Validate all working folders are present,Check for possibility of resume using the resume log, if no resume log , then get the list of county to treat from data folder , use list of county as list transaction item " DisplayName="InitAllApplications" sap:VirtualizedContainerService.HintSize="478.4,252" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ExternalDictionary">[ExternalDictionary]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="RpaConnectionString">[RpaConnectionString]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="zipcodeToCountyNameLibrary">[zipcodeToCountyNameLibrary]</OutArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="startDocketNumber">[startDocketNumber]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="countDocket">[countDocket]</InArgument>
                          <OutArgument x:TypeArguments="s:String[]" x:Key="docketNumbers">[ArrayOfDocketNumbers]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="workStamp">[workStamp]</OutArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="UnsetResumeLog">[UnsetResumeLog]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DocketType">[in_DocketType]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_UsrWorkYear">[in_UsrWorkYear]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="shouldUseAutoLogin">[shouldUseAutoLogin]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="478.4,104.8" sap2010:WorkflowViewState.IdRef="Assign_41">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Config("WorkStamp")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[workStamp]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="544,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:Annotation.AnnotationText="Logs System error in exceptions folder if any" DisplayName="LOGS SYSTEM ERROR" sap:VirtualizedContainerService.HintSize="512,372" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddResponse" sap:VirtualizedContainerService.HintSize="478.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\AddResponse.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="Response">["["+TransactionItem+"] Error : "+exception.Message+" at "+ exception.Source]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="exceptionFilePath">[exceptionFilePath]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="544,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:Annotation.AnnotationText="Logs Business error in exceptions folder if any" DisplayName="LOGS BUSINESS ERROR" sap:VirtualizedContainerService.HintSize="512,372" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_30">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddResponse" sap:VirtualizedContainerService.HintSize="478.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project\AddResponse.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="Response">["["+TransactionItem+"] Error : "+exception.Message+" at "+ exception.Source]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="exceptionFilePath">[exceptionFilePath]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="512,89.6" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
                  <av:Size x:Key="ShapeSize">262.4,169.6</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">250.6666666666664</x:Double>
                  <x:Double x:Key="StateContainerHeight">60.746666666666556</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="581.3333333333334,701.3333333333334" sap2010:WorkflowViewState.IdRef="Transition_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">405.7,178.1 405.7,208.1 409.44,208.1 409.44,291</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID2</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence sap:VirtualizedContainerService.HintSize="476,288.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Comment sap:VirtualizedContainerService.HintSize="434,76" sap2010:WorkflowViewState.IdRef="Comment_2" Text="If Intialization is successfull proceeed to setup and processing , set retry number to zero" />
                      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>[SystemException is Nothing AndAlso BusinessException Is Nothing]</Transition.Condition>
                </Transition>
                <Transition DisplayName="SystemError" sap:VirtualizedContainerService.HintSize="450,507" sap2010:WorkflowViewState.IdRef="Transition_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">274.5,127.22000000000001 148.2,127.22000000000001 148.2,218.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">53</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="568,608" sap2010:WorkflowViewState.IdRef="Sequence_46">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="resumeLogPath" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[File.Exists(StandardScreenShotPath)]" sap:VirtualizedContainerService.HintSize="526,520" sap2010:WorkflowViewState.IdRef="If_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,169" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Fatal" Message="[&quot;System error at initialization: &quot; +  SystemException.Message + &quot; at Source: &quot; +   SystemException.Source]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments">[{StandardScreenShotPath}]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",SystemException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Fatal" Message="[&quot;System error at initialization: &quot; +  SystemException.Message + &quot; at Source: &quot; +   SystemException.Source]" />
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="492,169" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Fatal" Message="[&quot;System error at initialization: &quot; +  SystemException.Message + &quot; at Source: &quot; +   SystemException.Source]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send_Email_Using_Outlook - Invoke Workflow File (MOLStandardFramework/Send_Email_Using_Outlook.xaml)" sap:VirtualizedContainerService.HintSize="388,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="MOLStandardFramework/Send_Email_Using_Outlook.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailSubject">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsTo">[Config("error_Email").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailRecipientsCc">[Config("error_EmailCc").ToString]</InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_MailAttachments" />
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MailMessage">[File.ReadAllText("Data\EmailTemplates\01General_ErrorNotification.txt").Replace("ProcessName",config("ProcessName").ToString()).Replace("MachineName",Environment.MachineName).Replace("errorMessage",SystemException.Message).Replace("LastDocketNumber",PreviouslyTreatedDocketNumber).Replace("NumberOfDownloads",NumberOfDownloads.ToString())]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TitleOfEmail">["MSV Properties -"+Config("ProcessName").ToString+" [" + DateTime.Now.ToString("dd-MM-yyyy") + "]: Error Notification"]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Fatal" Message="[&quot;System error at initialization: &quot; +  SystemException.Message + &quot; at Source: &quot; +   SystemException.Source]" />
                                </Sequence>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="572,21" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Transition.Action>
                  <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <Sequence sap:VirtualizedContainerService.HintSize="480,460" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch sap2010:Annotation.AnnotationText="Take a standard screenshot " DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,372" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="342,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Folder" />
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">[StandardScreenShotPath]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </Transition.Action>
          <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="0" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Used in case transactions are stored in a DataTable, for example, after being retrieved from a spreadsheet." Name="dt_TransactionData" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of consecutive system exceptions." Default="0" Name="ConsecutiveSystemExceptions" />
      <Variable x:TypeArguments="s:String[]" Name="ArrayOfDocketNumbers" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="zipcodeToCountyNameLibrary" />
      <Variable x:TypeArguments="x:String" Name="RpaConnectionString" />
      <Variable x:TypeArguments="x:String" Name="ProcessName" />
      <Variable x:TypeArguments="x:String" Name="exceptionFilePath" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="ExternalDictionary" />
      <Variable x:TypeArguments="ui:Browser" Name="browserCache" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="NumberOfDownloads" />
      <Variable x:TypeArguments="x:String" Default="None" Name="PreviouslyTreatedDocketNumber" />
      <Variable x:TypeArguments="x:String" Name="StandardScreenShotPath" />
      <Variable x:TypeArguments="x:String" Name="workStamp" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>